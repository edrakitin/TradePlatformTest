@model TradePlatformTestApp.Models.ProductViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="top-bar" style="padding-left:15px;">
    <div class="top-bar-list">
        <div class="top-bar-item top-bar-item-full">
            <div class="top-bar-search">
                <form action="@Url.Action("Index", "Home")" method="get" onsubmit="return validateSearchForm(this);">
                    <div class="input-group input-group-search">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                <span class="iconify" data-icon="oi-magnifying-glass"></span>
                            </span>
                        </div>
                        <input id="search" name="search" type="text" class="form-control" aria-label="Search" placeholder="Поиск" value="@ViewBag.SearchQuery" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<br />

@if (Context.User.Identity.IsAuthenticated)
{
    <div class="row" style="margin-bottom:15px;padding-left:30px;">
        <div>
            <a class="btn btn-primary" href="/Product/AddEdit">
                <span class="d-none d-md-inline ml-1">Добавить товар</span>
            </a>
        </div>
    </div>
}

<div class="row" style="margin-bottom:15px;min-height:70vh;">
    <div class=@(Context.User.Identity.IsAuthenticated ? "col-10" : "col-12" )>
        <div class="card-columns">
            @if (Model.ProductList.Count == 0)
            {
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Товары не найдены</h5>
                    </div>
                </div>
            }

            @foreach (var product in Model.ProductList)
            {
                <div class="card">
                    <div class="card-block">
                        <div class="row">
                            <div class="col-6" style="margin-top:10px;">
                                <h4 class="card-title">@product.Name</h4>
                            </div>
                            <div class="col-6">
                                @if (product.CanEdit)
                                {
                                    <a class="btn btn-primary float-right" href="/Product/AddEdit?productId=@product.Id" style="margin:5px;float:right;">
                                        <span class="d-none d-md-inline ml-1">Редактировать</span>
                                    </a>
                                }
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-3">
                                Описание
                            </div>
                            <div class="col-9">
                                @product.Description
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-3">
                                Цена
                            </div>
                            <div class="col-9">
                                @product.Cost
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-3">
                                Категория
                            </div>
                            <div class="col-9">
                                @product.ProductCategory.Name
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-3">
                                Статус
                            </div>
                            <div class="col-9">
                                @(product.ProductStatus?.Name ?? "Без платного статуса")
                            </div>
                        </div>

                        @if (Context.User.Identity.IsAuthenticated)
                        {
                            <div class="row">
                                <div class="col-3">
                                    Телефон
                                </div>
                                <div class="col-9">
                                    @product.Phone
                                </div>
                            </div>
                        }
                    </div>

                    <div class="row" style="margin-bottom:10px;">
                        <div class="col-3" style="height:80px;">
                            Фотографии товара
                        </div>
                        <div class="col-9">
                            @if (product.ProductFiles.Count == 0)
                            {
                                <p>Отсутствуют</p>
                            }
                            @foreach (var img in product.ProductFiles)
                            {
                                <img class="productImg" src=@($"data:image/jpg;base64,{img.Content}") width="80" height="80">
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    @if (Context.User.Identity.IsAuthenticated)
    { 
        <div class="col-2" style="padding-bottom:15px;">
            <div class="card" style="height:100%;">
                <div class="card-block">
                    <h4 class="card-title" style="margin-top:10px;padding-left:15px;">Чат</h4>
                    <hr />
                    <div id="inputForm">
                        <div class="row" style="margin:5px;padding-left: 0px;">
                            <input type="text" id="message" style="width:100%" />
                        </div>
                        <div class="row" style="margin:5px;padding-left: 0px;">
                            <input type="button" id="sendBtn" value="Отправить" />
                        </div>
                    </div>
                    <hr />
                    <div id="chatroom"></div>
                </div>
            </div>
        </div>
    }
</div>

<nav aria-label="Page navigation">
    <ul class="pagination flex-wrap">
        <li class="page-item @(Model.EnablePrevious ? " " : " disabled" )">
            <a asp-controller="Home" asp-action="Index"
               asp-route-currentPage="1"
               class="page-link" aria-label="Frist">
                <span aria-hidden="true">|<</span>
                <span class="sr-only">First</span>
            </a>
        </li>
        <li class="page-item @(Model.EnablePrevious ? " " : " disabled" )">
            <a asp-controller="Home" asp-action="Index"
               asp-route-currentPage="@(Model.CurrentPage -1)"
               class="page-link" aria-label="Next">
                <span aria-hidden="true"><</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
        @{
            var startIndex = Model.CurrentPage - 2 > 0 ? 0 : Model.CurrentPage - 2 - 1;
            var endIndex = Model.TotalPages - Model.CurrentPage > 2 ? 0 : Model.TotalPages - Model.CurrentPage - 2;
        }
        @for (var i = Model.CurrentPage - 2 + endIndex; i <= Model.CurrentPage + 2 - startIndex; i++)
        {
            if (i > 0 && i <= Model.TotalPages)
            {
                <li class="page-item @(i == Model.CurrentPage ? " active" : "" )">
                    <a asp-controller="Home" asp-action="Index"
                       asp-route-currentPage="@i"
                       class="page-link">@i</a>
                </li>
            }
        }
        <li class="page-item @(Model.EnableNext ? " " : " disabled" )">
            <a asp-controller="Home" asp-action="Index"
               asp-route-currentpage="@(Model.CurrentPage + 1)"
               class="page-link" aria-label="Previous">
                <span aria-hidden="true">></span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        <li class="page-item @(Model.EnableNext ? " " : " disabled" )">
            <a asp-controller="Home" asp-action="Index"
               asp-route-currentPage="@Model.TotalPages"
               class="page-link" aria-label="Last">
                <span aria-hidden="true">>|</span>
                <span class="sr-only">Last</span>
            </a>
        </li>
    </ul>
</nav>

<div id="imgModal" class="modal">

    <span class="closeModal">&times;</span>

    <img class="modal-content" id="imgStore">
</div>


<script src="~/js/signalr/dist/browser/signalr.min.js"></script>

<script type="text/javascript">
    function validateSearchForm(form) {
        if (form.request.value.trim() == "") {
            return false;
        }
        return true;
    }

    document.addEventListener("DOMContentLoaded", function () {

        var modal = document.getElementById("imgModal");
        var modalImg = document.getElementById("imgStore");

        var imgs = document.getElementsByClassName("productImg");

        Array.prototype.forEach.call(imgs, function (img, index) {
            imgs[index].onclick = function () {
                modal.style.display = "block";
                modalImg.src = this.src;
            }
        });

        var span = document.getElementsByClassName("closeModal")[0];

        span.onclick = function () {
            modal.style.display = "none";
        }
    });

    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();

    hubConnection.on("Send", function (message, userName) {

        // создаем элемент <b> для имени пользователя
        let userNameElem = document.createElement("b");
        userNameElem.appendChild(document.createTextNode(userName + ': '));

        // создает элемент <p> для сообщения пользователя
        let elem = document.createElement("p");
        elem.appendChild(userNameElem);
        elem.appendChild(document.createTextNode(message));

        var firstElem = document.getElementById("chatroom").firstChild;
        document.getElementById("chatroom").insertBefore(elem, firstElem);

    });

    document.getElementById("sendBtn").addEventListener("click", function (e) {
        let message = document.getElementById("message").value;
        hubConnection.invoke("Send", message, '@Context.User.Identity.Name');
    });

    hubConnection.start();
</script>


